package com.fdmgroup.market.servlet;

import java.io.IOException;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.fdmgroup.market.controller.Controller;
import com.fdmgroup.market.dao.AddressDAO;
import com.fdmgroup.market.dao.FighterDAO;
import com.fdmgroup.market.dao.MemberDAO;
import com.fdmgroup.market.entity.Address;
import com.fdmgroup.market.entity.Member;
import com.fdmgroup.market.enums.City;
import com.fdmgroup.market.enums.Role;

/**
 * Servlet implementation class AdminServlet
 */
public class AdminServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {

		EntityManagerFactory enMgFac = (EntityManagerFactory) getServletContext()
				.getAttribute("enMgFac");
		EntityManager enMg = enMgFac.createEntityManager();
		EntityTransaction tx = enMg.getTransaction();

		HttpSession session = request.getSession();

		MemberDAO daoM = new MemberDAO(enMg);
		FighterDAO daoF = new FighterDAO(enMg);
		AddressDAO daoA = new AddressDAO(enMg);
		String nextPage = null;
		tx.begin();
		
		String submitType = request.getParameter("Submit");
		
		// add member

		if (submitType.equals("Register")) {
			String name = request.getParameter("name");
			String balance = request.getParameter("balance");
			String street = request.getParameter("street");
			String postcode = request.getParameter("postcode");
			String city = request.getParameter("city");
			String password = request.getParameter("password");
			String role = request.getParameter("role");

			Member member = new Member(name, Double.parseDouble(balance),
					password);
			Address address = new Address(street, postcode, City.findCity(city));
			daoM.addNewMember(member);
			daoA.addAddressToMember(address, member);
			tx.commit();
			enMg.close();
			// session.setAttribute("registededMember", member);
			nextPage = "/admin/AdminHome.html";

		}

		RequestDispatcher dispatcher = request.getRequestDispatcher(nextPage);
		dispatcher.forward(request, response);

	}
}
